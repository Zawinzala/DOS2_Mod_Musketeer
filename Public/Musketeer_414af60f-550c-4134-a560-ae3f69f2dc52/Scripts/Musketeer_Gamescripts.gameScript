INIT

EVENTS
EVENT Musketeer_FlareCast
VARS
    CHARACTER:_Char
    FLOAT3:_TargetPos
ON
    OnSkillCast(_Char, Target_Musk_Flare_Test_Target)
ACTIONS
		IF "c1"
			GetVar(_TargetPos, _Char, "Musketeer_FlareCast_Pos_X")
		THEN
		ShootLocalProjectileAt(Projectile_Flare_Explosion, _Char, {0.0;1.0;0.0}, _TargetPos, 1, _Char)	
	ENDIF


EVENT Musketeer_Last_Act_Cast
VARS
    CHARACTER:_Char
    //CHARACTER:_Target
ON
	OnCharacterEvent(_Char, "Musk_FinalAct_Executed")
ACTIONS
		IF "c1"
			//CharacterHasStatus(_Target, MUSK_MARK_TARGET)
			IsTagged(_Char, "Musketeer_Final_Act_Tag")
		THEN
			CharacterAddActionPoints(_Char, 1)
			CharacterPlayEffect(_Char, "Musketeer_FX_Euphoria_Infuse")
			CharacterApplyStatus(_Char, MUSK_EUPHORIA, 1, 1, _Char)
			CharacterApplyStatus(_Char, MUSK_FINALACT_HEAL, 0, 1, _Char)
			ClearTag(_Char, "Musketeer_Final_Act_Tag")
		ELSE
			CharacterAddActionPoints(_Char, 1)
			CharacterPlayEffect(_Char, "Musketeer_FX_Haste_Infuse")
			CharacterApplyStatus(_Char, HASTED, 1, 1, _Char)
		ENDIF


EVENT Musketeer_Rend_Cast
VARS
    CHARACTER:_Char
	CHARACTER:_Target
    //CHARACTER:_Target
ON
	//OnCharacterEvent(_Char, "Musk_Rend_Executed")
	OnCharacterCharacterEvent(_Char, _Target, "Musk_Rend_Executed")
ACTIONS
	CharacterApplyStatus(_Char, MUSK_REND_BUFF, 1, 1, _Char)
	CharacterPlayEffect(_Target, "Musketeer_FX_Rend_Slash", "Dummy_OverheadFX")
	ShootLocalProjectileAt(Projectile_Musk_Rend_Harvest_Effect, _Target, {0.0;0.1;0.0}, _Char, 1, _Char)
/*
		IF "c1"
			GetVar(_Target, _Char, "Rend_Effect_Origin")
		THEN
			CharacterApplyStatus(_Char, MUSK_REND_BUFF, 1, 1, _Char)
			ShootLocalProjectileAt(Projectile_Musk_Rend_Harvest_Effect, _Target, {0.0;0.1;0.0}, _Char, 1, _Target)
		ENDIF
*/


EVENT Musketeer_Rend_Stack_Impact_Effect
VARS
	CHARACTER:_Char
	CHARACTER:_Target
ON
	//OnCharacterUsedSkillOnMe(_, Projectile_Musk_Rend_Harvest_Effect)
	OnCharacterStatusApplied(_Char, MUSK_REND_APPLYEFFECT)
ACTIONS
	CharacterPlayEffect(_Char, "Musketeer_FX_Rend_Impact")
	CharacterRemoveStatus(_Char, MUSK_REND_APPLYEFFECT)


EVENT Musketeer_Executioner_Ammo_Refund
VARS
    CHARACTER:_Char
    CHARACTER:_Target
ON
    //OnSkillCast(_Char, Projectile_Final_Act)
	OnDie(_Target, _, _Char, _)
ACTIONS
		IF "c1&!c2&c3"
			CharacterHasTalent(_Char, Executioner)
			CharacterHasStatus(_Char, MUSK_EXECUTIONER)
			IsTagged(_Char, "Rifle_Armed")
		THEN
			// Do the actual Ammo refunding in story script.
			CharacterApplyStatus(_Char, MUSK_EXECUTIONER, -2, 1, _Char)
		ENDIF

EVENT Musketeer_Piercing_Ammo_Passthrough
VARS
    CHARACTER:_OriginChar
    FLOAT3:_TargetLoc
	CHARACTER:_ProjectileOrigin
	ITEM:_ProjectileOriginItem
	SKILL:_ProjectileSkill
ON
	OnCharacterEvent(_OriginChar, "Musketeer_Pierce_Ammo_Event")
ACTIONS
		IF "c1&c2&c3" //"c1&(c2|c3)&c4"
			GetVar(_TargetLoc, _OriginChar, "Piercing_TargetLocation")
			//GetVar(_ProjectileOrigin, _OriginChar, "Piercing_OriginLocation")
			//GetVar(_ProjectileOriginItem, _OriginChar, "Piercing_OriginLocation")
			IsTagged(_OriginChar, "Rifle_Armed")
			GetVar(_ProjectileSkill, _OriginChar, "Piercing_Projectile_Skill")
		THEN
			IF "c1&!c2"
				GetVar(_ProjectileOrigin, _OriginChar, "Piercing_OriginLocation")
				IsEqual(_ProjectileOrigin, null)
			THEN
				//DebugText(_OriginChar,"Piercing Ammo Stuff GameScript")
				ShootLocalProjectileAt(_ProjectileSkill, _ProjectileOrigin, {0.0;0.3;0.0}, _TargetLoc, 1, _OriginChar)
				//CharacterPlayEffect(_OriginChar, "Musketeer_FX_Haste_Infuse")
			ELIF "c1&!c2"
				GetVar(_ProjectileOriginItem, _OriginChar, "Piercing_OriginLocation")
				IsEqual(_ProjectileOriginItem, null)
			THEN
				//DebugText(_OriginChar,"Piercing Ammo Stuff GameScript")
				ShootLocalProjectileAt(_ProjectileSkill, _ProjectileOriginItem, {0.0;0.3;0.0}, _TargetLoc, 1, _OriginChar)
				//CharacterPlayEffect(_OriginChar, "Musketeer_FX_Euphoria_Infuse")
			ENDIF
		ENDIF
		
EVENT Musketeer_Dynamic_Range_Status_Change
VARS
    CHARACTER:_Character
	INT:_SourceryPoints
ON
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_LONG)
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_LONG_LW)
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_MEDIUM)
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_MEDIUM_LW)
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_SHORT)
	OnCharacterStatusRemoved(_Character, MUSK_RANGE_SHORT_LW)
ACTIONS
	IF "c1&c2&c3"
		IsTagged(_Character, "Rifle_Armed")
		CharacterGetAbility(_SourceryPoints, _Character, Sourcery)
		IsEqual(_SourceryPoints, 0)
	THEN
		CharacterEvent(_Character, "Musketeer_Check_Dynamic_Range")
	ENDIF